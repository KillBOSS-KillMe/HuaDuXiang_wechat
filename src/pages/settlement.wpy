
<template>
  <view class="settlement-wrap">
    <navigator url="/pages/consignee" hover-class="none" class="useraddress">
      <image class="imgadd" src="/assets/img/image33.png" />
      <view class="center" wx:if="{{address}}">
        <view class="userinfo">收货人: {{address.true_name}} {{address.tel_phone}}</view>
        <view class="useradd">{{address.area_info}}{{address.address}}</view>
      </view>
      <view class="center" wx:elif>
        <view class="add-address">添加收货地址</view>
      </view>
      <image class="imgright" src="/assets/img/image25.png" />
    </navigator>
    <view class="usergoods-wrap">
      <repeat for="{{goods_list}}">
        <view class="usergoods">
          <image class="goodsimg" src="{{item.goods_image_url}}" />
          <view class="goods-right">
            <view class="goodsname overflow-one">{{item.goods_name}}</view>
            <view class="goodstag">
              <text>{{item.goods_spec}}</text>
              <view class="goodnum">×{{item.goods_num}}</view>
            </view>
            <view class="goodprice">
              ￥
              <text class="price">{{item.goods_price}}</text>
            </view>
          </view>
        </view>
      </repeat>
    </view>
    <!-- 定金 -->
    <view class="earnest-money" hidden >
      <view class="item  red-color">
        <view class="title">定金</view>
        <view class="price">
          ￥
          <text>2</text>
        </view>
      </view>
      <view class="item  gray-color">
        <view class="title">尾款</view>
        <view class="price">
          ￥
          <text>2000</text>
        </view>
      </view>
      <text>08月22日 00:0000开始支付尾款</text>
    </view>

    <view class="option-wrap">
      <view class="option-item">
        <view class="com-title">商品</view>
        <view class="price">
          ￥
          <text>{{goodsPrice}}</text>
        </view>
      </view>
      <view class="option-item" wx:if="{{false}}" >
        <view class="com-title">运费</view>
        <view class="price">
          ￥
          <text>2</text>
        </view>
      </view>
    </view>
    <!-- 底部 订单提交 -->
    <view class="settlebottom">
      <view class="num">共{{goodsAllNum}}件</view>
      <view class="priceall">
        共计 ￥
        <text class="allprice">{{allPrice}}</text>元
      </view>
      <button class="sub-btn" @tap="getWXPayment">提交订单</button>
    </view>
  </view>
</template>

<script>
var api = require('../api.js');
import { ajax } from '../ajax.js';
import wepy from 'wepy';

export default class ShopCart extends wepy.page {
  config = {
    navigationBarTitleText: '提交订单'
  };

  components = {};

  mixins = [];

  data = {
    requestImgUrl: '',
    address: null, //地址信息
    goods_list: [], //下单商品信息
    store_cart_list: [], //下单店铺列表
    allPrice: 0, //订单总价格
    goodsPrice: 0, // 商品总价格
    goodsAllNum: 0, //总共件数
    address_api: null, // 地址信息hash
    vat_hash: null, //发票信息hash
    cart_id: null, //商品id数量
    payment_list: [], // 支付方式
  };

  computed = {};

  methods = {
    async getWXPayment() {
      //async函数，避免异步函数嵌套 https://wepyjs.github.io/wepy-docs/1.x/#/?id=针对原生api进行优化
      var resOrder = await ajax({
        url: api.placeOrder,
        data: {
          cart_id: this.cart_id,
          ifcart: 0,  // 1=是购物车，0=不是购物车
          address_id: this.address.address_id,  // 地址id
          vat_hash: this.vat_hash,  //发票信息hash，
          offpay_hash: this.address_api.offpay_hash,    // 是否支持货到付款，
          offpay_hash_batch: this.address_api.offpay_hash_batch,   //店铺是否支持货到付款hash
          pay_name: 'online',
          invoice_id: 0,
        }
      }).then(res => res.datas)

      var resPay = await ajax({
        url: api.pay,
        data: {
          pay_sn: resOrder.pay_sn,
          payment_code: 'mini_wxpay',
        }
      }).then(res => res.datas)
      if(resPay.state == 1) {
        wx.requestPayment({
          ...resPay.api_pay,
          success (res) {
            console.log(res, 'success')
          },
          fail (res) {
            console.log(res,'fail')
          }
        })
      } 
    }
  };

  events = {};
  onLoad(options) {
    // 支付方式列表
    ajax({
      url: api.memberPayment,
      type: 'get',
    }).then(res => {
      if(res.code == 200) {
        this.payment_list = res.datas.payment_list
      }
    })
  }
  onShow() {
    this.requestImgUrl = this.$parent.globalData.requestImgUrl;
    var app = this.$parent;
    // 全局订单信息
    var orderInfo = app.globalData.orderInfo
    console.log(orderInfo)
    // 地址信息
    this.address = orderInfo.address_info
    // 多店铺信息
    this.store_cart_list = orderInfo.store_cart_list
    // 商品列表
    var goods_list = []
    // 商品总价格
    var goodsPrice = 0
    Object.values(orderInfo.store_cart_list).forEach(item => {
      goods_list = goods_list.concat(item.goods_list)
      goodsPrice += Number(item.store_goods_total)
    })
    this.goodsPrice = goodsPrice.toFixed(2)
    this.goods_list = goods_list
    // 商品总数量
    var goodsAllNum = 0
    goods_list.forEach(item => {
      goodsAllNum += Number(item.goods_num)
    })
    this.goodsAllNum = goodsAllNum
    // 订单总价格
    this.allPrice = Number(orderInfo.order_amount).toFixed(2)
    // 地址hash
    this.address_api = orderInfo.address_api
    // 发票信息hash
    this.vat_hash = orderInfo.vat_hash
    // 商品信息
    this.cart_id = orderInfo.cart_id
  }
}
</script>

<style lang="less">
.red-color {
  color: #ff2228;
}
.gray-color {
  color: #999999;
}
.settlement-wrap {
  margin-bottom: 100rpx;
}
// 用户地址 信息
.useraddress {
  padding: 20rpx;
  background: #fff;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .imgadd {
    width: 44rpx;
    height: 44rpx;
    margin-right: 24rpx;
  }
  .center {
    flex: 1;
    .userinfo {
      font-size: 32rpx;
      color: #292929;
      font-weight: bold;
      padding-bottom: 10rpx;
    }
    .useradd {
      font-size: 26rpx;
      color: #999;
      line-height: 1.5;
    }
  }
  .imgright {
    width: 44rpx;
    height: 44rpx;
  }
}
.usergoods-wrap {
  border-top: 10rpx solid #f9f9f9;
  .usergoods {
    padding: 30rpx;
    display: flex;
    align-items: center;
    .goodsimg {
      width: 156rpx;
      height: 156rpx;
      border-radius: 10rpx;
      margin-right: 26rpx;
    }
    .goods-right {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 160rpx;
      .goodsname {
        font-weight: bold;
        width: 500rpx;
        font-size: 30rpx;
      }
      .goodstag {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: space-between;
        text {
          display: block;
          padding: 0 20rpx;
          background: #fbfbfb;
          border-radius: 6rpx;
          height: 42rpx;
          line-height: 42rpx;
          color: #a3a3a3;
          font-size: 26rpx;
        }
        .goodnum {
          color: #999;
        }
      }
      .goodprice {
        color: #f92832;
        text-align: right;
        .price {
          font-size: 36rpx;
          font-weight: bold;
        }
      }
    }
  }
}
.option-wrap {
  border-top: 10rpx solid #f2f2f2;
  .option-item {
    height: 90rpx;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 30rpx;
    border-bottom: 1px solid #f2f2f2;
    .com-title {
      font-weight: bold;
    }
    .description {
      display: flex;
      align-items: center;
      flex: 1;
      justify-content: flex-end;
      > image {
        width: 24rpx;
        height: 24rpx;
      }
      text {
        font-size: 24rpx;
        padding: 0 20rpx 0 10rpx;
      }
    }
    > image {
      width: 48rpx;
      height: 48rpx;
    }
    .price {
      color: #f92832;
      text {
        font-weight: bold;
        font-size: 36rpx;
      }
    }
  }
}
.settlebottom {
  position: fixed;
  display: flex;
  justify-content: space-between;
  align-items: center;
  bottom: 0;
  z-index: 999;
  height: 100rpx;
  line-height: 100rpx;
  width: 100%;
  padding: 0 30rpx;
  box-sizing: border-box;
  .priceall {
    color: #a3a3a3;
    font-size: 30rpx;
    .allprice {
      color: #f92832;
      font-size: 38rpx;
      font-weight: bold;
    }
  }
  .sub-btn {
    width: 226rpx;
    height: 70rpx;
    line-height: 70rpx;
    background: #f92832;
    border-radius: 10rpx;
    text-align: center;
    color: #fff;
    font-weight: bold;
    font-size: 30rpx;
  }
}
.earnest-money {
  position: relative;
  .item{
    display: flex;
    height: 90rpx;
    justify-content: space-between;
    align-items: center;
    padding: 30rpx 30rpx 0;
    &:nth-of-type(1) {
      padding-top: 0;
    }
    .title {
      position: relative;
    }
    .price {
      text {
        font-weight: bold;
      }
    }
  }
  > text {
    height: 90rpx;
    line-height: 90rpx;
    color: #999999;
    padding-left: 30rpx;
  }
}
</style>

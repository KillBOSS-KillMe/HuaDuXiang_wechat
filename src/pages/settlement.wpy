
<template>
  <view class="settlement-wrap">
    <navigator url="/pages/consignee" hover-class="none" class="useraddress">
      <image class="imgadd" src="/assets/img/image33.png" />
      <view class="center" wx:if="{{address}}">
        <view class="userinfo">收货人: {{address.true_name}} {{address.tel_phone}}</view>
        <view class="useradd">{{address.area_info}}{{address.address}}</view>
      </view>
      <view class="center" wx:elif>
        <view class="add-address">添加收货地址</view>
      </view>
      <image class="imgright" src="/assets/img/image25.png" />
    </navigator>
    <view class="usergoods-wrap">
      <repeat for="{{store_cart_list}}">
        <view class="shop-list">
          <repeat for="{{item.goods_list}}" item="ele" index="idx">
            <view class="usergoods">
              <image class="goodsimg" src="{{ele.goods_image_url}}" />
              <view class="goods-right">
                <view class="goodsname overflow-one">{{ele.goods_name}}</view>
                <view class="goodstag">
                  <text>{{ele.goods_spec}}</text>
                  <view class="goodnum">×{{ele.goods_num}}</view>
                </view>
                <view class="goodprice">
                  ￥
                  <text class="price">{{ele.goods_price}}</text>
                </view>
              </view>
            </view>
          </repeat>
          <view class="goods-service">
            <view class="com-list" wx:if="{{item.freight == 1}}">
              <view class="title">运费</view>
              <view class="price">￥{{postage[index]}}</view>
            </view>
            <view class="com-list" wx:if="{{item.store_voucher_info.voucher_price}}">
              <view  class="title">优惠券</view>
              <view  class="price">-{{item.store_voucher_info.voucher_price}}</view>
              <!-- <image class="imgright" src="/assets/img/image25.png" /> -->
            </view>
            <view class="merchandise-subtotal">小计：<text>￥{{item.store_goods_total}}</text></view>
          </view>
        </view>
      </repeat>
    </view>
    <!-- 定金 -->
    <view class="earnest-money" hidden >
      <view class="item  red-color">
        <view class="title">定金</view>
        <view class="price">
          ￥
          <text>2</text>
        </view>
      </view>
      <view class="item  gray-color">
        <view class="title">尾款</view>
        <view class="price">
          ￥
          <text>2000</text>
        </view>
      </view>
      <text>08月22日 00:0000开始支付尾款</text>
    </view>

    <!-- <view class="price-type" wx:if="{{available_predeposit>0}}">
      <view class="type">
        <view class="left">
          <text>使用余额支付</text>
          <switch color="#48CFAE" checked="{{payment_type == 1}}" bindchange="changePayment"></switch>
        </view>
        <view class="price">
          <text>可用余额</text>
          <view>￥{{available_predeposit}}</view>
        </view>
      </view>
      <view class="input-wrap" wx:if="{{payment_type == 1}}">
        <text>输入支付密码</text>
        <input type="password" @input="inputPassword" value="{{password}}" maxlength="6">
      </view>
    </view> -->
    <!-- 底部 订单提交 -->
    <view class="settlebottom">
      <view class="num">共{{goodsAllNum}}件</view>
      <view class="priceall">
        共计 ￥
        <text class="allprice">{{allPrice}}</text>元
      </view>
      <button class="sub-btn" @tap="getWXPayment">提交订单</button>
    </view>

    <paymask :maskFlag.sync="payFlag">
      <view class="price-type">
        <view class="price-all">支付金额：<text>￥{{allPrice}}</text></view>
        <view class="type">
          <view class="left">
            <text>使用余额支付</text>
            <switch color="#48CFAE" checked="{{payment_type == 1}}" disabled="{{disabledSwitch}}" bindchange="changePayment" bindtap="clickSwitch"></switch>
          </view>
          <view class="price">
            <text>可用余额</text>
            <view>￥{{available_predeposit}}</view>
          </view>
        </view>
        <view class="input-wrap" wx:if="{{payment_type == 1}}">
          <text>输入支付密码</text>
          <input type="password" @input="inputPassword" value="{{password}}" maxlength="6">
        </view>
        <view class="price-type-title">支付方式：{{payment_type == 0 ? '微信支付':'余额支付'}}</view>
        <button class="btn" @tap="pay">确认支付</button>
      </view>
    </paymask>
  </view>
</template>

<script>
var api = require('../api.js');
import { ajax } from '../ajax.js';
import wepy from 'wepy';
import mask from '../components/mask';

// 支付流程
// 1.立即购买(选择规格数量) w=member_buy&t=buy_step1
// 2.提交订单 w=member_buy&t=buy_step2
// 3.判断此订单支付的支付方式 w=member_buy&t=pay
// 3.1 微信支付 w=member_payment&t=pay 拉起支付 支付成功与否跳转订单列表
// 3.2 余额支付 (1)根据3判断此订单是否开启余额支付(predepositFlag) true:进行(2);
//             (2)根据余额与支付金额判断是否支持余额支付  true:进行(3); false: 询问是否前去充值页面;
//             (3)输入密码判断正确与否 w=member_index&t=check_password  true:进行(4)
//             (4)w=member_payment&t=pay  支付成功与否跳转订单列表

export default class Settlement extends wepy.page {
  config = {
    navigationBarTitleText: '提交订单'
  };

  components = {
    paymask: mask
  };

  mixins = [];

  data = {
    payFlag: false,
    priceArr: [{title: '微信支付',icon: 'image57.png', flag: 1},{title: '余额支付',icon: 'image58.png',flag: 0}],
    requestImgUrl: '',
    address: null, //地址信息
    goods_list: [], //下单商品信息
    store_cart_list: [], //下单店铺列表
    allPrice: 0, //订单总价格
    goodsAllNum: 0, //总共件数
    address_api: null, // 地址信息hash
    vat_hash: null, //发票信息hash
    cart_id: null, //商品id数量
    payment_list: [], // 支付方式
    goods_freight: 0, //运费
    payment_type: 0 , //付款类型 0微信 1余额
    available_predeposit: 0, //用户余额
    password: '', // 用户余额密码
    postage: {}, //邮费
    pay_sn: '',  // 支付参数
    disabledSwitch: false,
    predepositFlag: true, // 余额支付是否开启
    mini_wxpayFlag: true, // 微信支付是否开启

  };

  computed = {
    disabledSwitch() {
      return this.available_predeposit < this.allPrice || !this.predepositFlag
    }
  };

  methods = {
    inputPassword(e) {
      this.password = e.detail.value
    },
    clickSwitch() {
      var that = this
      if(!this.predepositFlag) {
        wx.showToast({
          title: '余额支付暂未开启，请使用微信支付',
          icon: 'none'
        })
        return false
      }
      if(this.available_predeposit < this.allPrice) {
        this.payment_type = 0
        wx.showModal({
          title: "提醒",
          content: "余额不足，是否前往充值？",
          success(res) {
            if(res.confirm) {
              that.$redirect(`vip`);
            }
          }
        })
      }
    },
    changePayment(e) {
      this.payment_type = Number(e.detail.value)
      this.password = ''
    },
    getWXPayment() {
      var that = this
      if(!this.address.address_id) {
        wx.showToast({
          title: '请选择地址',
          icon: 'none'
        })
        return false
      }
      if(this.pay_sn) {
        this.payFlag = true
        return false
      }
      ajax({
        url: api.placeOrder,
        data: {
          cart_id: this.cart_id,
          ifcart: 0,  // 1=是购物车，0=不是购物车
          address_id: this.address.address_id,  // 地址id
          vat_hash: this.vat_hash,  //发票信息hash，
          offpay_hash: this.address_api.offpay_hash,    // 是否支持货到付款，
          offpay_hash_batch: this.address_api.offpay_hash_batch,   //店铺是否支持货到付款hash
          pay_name: 'online',
          invoice_id: 0,   // 发票
          // pd_pay: this.payment_type,  // 支付方式
          // password: this.password,  // 支付密码
          voucher: null,  // 优惠券

        }
      }).then(res => {
        if(res.code == 200) {
          this.payFlag = true
          this.pay_sn = res.datas.pay_sn
          this.$apply()
          this.requestPayType()
        } else {
          wx.showToast({
            title: '网络错误，请稍后再试',
            icon: 'none'
          })
        }
      })
    },
    async pay() {
      var that = this
      // 余额支付跳框输入密码
      if(this.payment_type == 1) {
        if(!this.password) {
          wx.showToast({
            title: '请输入密码',
            icon: 'none'
          })
          return false
        }
        var passwordData = await ajax({
          url: api.checkPassword,
          data: {
            password: this.password
          }
        })
        if(passwordData.datas.state == 0) {
          wx.showToast({
            title: '密码错误，请重新输入',
            icon: 'none'
          })
          return false
        }
      }
      var resPay = await ajax({
        url: api.pay,
        data: {
          pay_sn: this.pay_sn,
          payment_code:  this.payment_type == 0 ?  'mini_wxpay'  :  'predeposit',
          password: this.password,  // 支付密码
          pd_pay: this.payment_type,  // 支付方式
        }
      }).then(res => res.datas)
      if(resPay.state == 0) {
        wx.showToast({
          title: resPay.msg,
          icon: 'none'
        })
      }
      if(resPay.state == 1) {
        if(this.payment_type == 0) {
          wx.requestPayment({
            ...resPay.api_pay,
            success (res) {
              wx.showToast({
                title: '支付成功'
              })
            },
            fail (res) {
              wx.showToast({
                title: '支付失败'
              })
            },
            complete() {
              var timer = setTimeout(() => {
                that.$redirect(`orderlist`);
                clearTimeout(timer)
              }, 1000)
            }
          })
        } else {
          wx.showToast({
            title: '支付成功'
          })
          var timer = setTimeout(() => {
            that.$redirect(`orderlist`);
            clearTimeout(timer)
          }, 1000)
        }
      } 
    }
  };
  events = {};
  requestPayType() {
    // 用户选择支付方式—
    ajax({
      url: api.payInfo,
      data: {
        pay_sn: this.pay_sn
      }
    }).then(res => {
      if(res.code == 200) {
        this.mini_wxpayFlag = res.datas.pay_info.mini_wxpay
        this.predepositFlag = res.datas.pay_info.predeposit
        this.$apply()
      }
    })
  }
  onLoad(options) {}
  onShow() {
    this.requestImgUrl = this.$parent.globalData.requestImgUrl;
    var app = this.$parent;
    // 全局订单信息
    var orderInfo = app.globalData.orderInfo
    // 邮费信息
    this.postage =orderInfo.address_api.content || {}
    // 地址信息
    this.address =  Object.prototype.toString.call(orderInfo.address_info)  == '[object Object]' ? orderInfo.address_info : ''
    // 多店铺信息
    this.store_cart_list = orderInfo.store_cart_list
    // 商品列表
    var goods_list = []
    // 商品总价格
    Object.values(orderInfo.store_cart_list).forEach(item => {
      goods_list = goods_list.concat(item.goods_list)
    })
    // 商品总数量
    var goodsAllNum = 0
    goods_list.forEach(item => {
      goodsAllNum += Number(item.goods_num)
    })
    this.goodsAllNum = goodsAllNum
    // 订单总价格
    this.allPrice = Number(orderInfo.order_amount).toFixed(2)
    // 地址hash
    this.address_api = orderInfo.address_api
    // 发票信息hash
    this.vat_hash = orderInfo.vat_hash
    // 商品信息
    this.cart_id = orderInfo.cart_id
    // 运费
    this.goods_freight = orderInfo.goods_freight
    // 余额
    this.available_predeposit = Number(orderInfo.available_predeposit)


  }
}
</script>

<style lang="less">
.red-color {
  color: #ff2228;
}
.gray-color {
  color: #999999;
}
.settlement-wrap {
  background: #eee;
  padding-bottom: 100rpx;
  box-sizing: border-box;
  min-height: 100vh;
  position: relative;
}
// 用户地址 信息
.useraddress {
  padding: 20rpx;
  background: #fff;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .imgadd {
    width: 44rpx;
    height: 44rpx;
    margin-right: 24rpx;
  }
  .center {
    flex: 1;
    .userinfo {
      font-size: 32rpx;
      color: #292929;
      font-weight: bold;
      padding-bottom: 10rpx;
    }
    .useradd {
      font-size: 26rpx;
      color: #999;
      line-height: 1.5;
    }
  }
  .imgright {
    width: 44rpx;
    height: 44rpx;
  }
}
.usergoods-wrap {
  padding-top: 40rpx;
  .shop-list {
    background: #fff;
    width: 700rpx;
    margin: 0 auto 40rpx;
    border-radius: 20rpx;
    .usergoods {
      padding: 30rpx;
      display: flex;
      align-items: center;
      .goodsimg {
        width: 156rpx;
        height: 156rpx;
        border-radius: 10rpx;
        margin-right: 26rpx;
      }
      .goods-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 160rpx;
        .goodsname {
          font-weight: bold;
          width: 450rpx;
          font-size: 30rpx;
        }
        .goodstag {
          flex: 1;
          display: flex;
          align-items: center;
          justify-content: space-between;
          text {
            display: block;
            padding: 0 20rpx;
            background: #fbfbfb;
            border-radius: 6rpx;
            height: 42rpx;
            line-height: 42rpx;
            color: #a3a3a3;
            font-size: 26rpx;
          }
          .goodnum {
            color: #999;
          }
        }
        .goodprice {
          color: #f92832;
          text-align: right;
          .price {
            font-size: 28rpx;
            font-weight: bold;
          }
        }
      }
    }
    .goods-service {
      padding: 30rpx;
      box-sizing: border-box;
      .com-list {
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 70rpx;
        .imgright {
          width: 44rpx;
          height: 44rpx;
        }
        .title {
          font-weight: bold;
        }
        .price {
          flex: 1;
          text-align: right;
        }
      }
      .merchandise-subtotal {
        text-align: right;
        height: 88rpx;
        line-height: 88rpx;
        font-weight: bold;
        font-size: 30rpx;
        > text {
          color: #f92832;
        }
      }
    }
  }
}

.settlebottom {
  background: #fff;
  border-top: 1px solid #f2f2f2;
  position: fixed;
  display: flex;
  bottom: 0;
  justify-content: space-between;
  align-items: center;
  z-index: 999;
  height: 100rpx;
  line-height: 100rpx;
  width: 100%;
  padding: 0 30rpx;
  box-sizing: border-box;
  .priceall {
    color: #a3a3a3;
    font-size: 30rpx;
    .allprice {
      color: #f92832;
      font-size: 38rpx;
      font-weight: bold;
    }
  }
  .sub-btn {
    width: 226rpx;
    height: 70rpx;
    line-height: 70rpx;
    background: #f92832;
    border-radius: 10rpx;
    text-align: center;
    color: #fff;
    font-weight: bold;
    font-size: 30rpx;
  }
}
.earnest-money {
  position: relative;
  .item{
    display: flex;
    height: 90rpx;
    justify-content: space-between;
    align-items: center;
    padding: 30rpx 30rpx 0;
    &:nth-of-type(1) {
      padding-top: 0;
    }
    .title {
      position: relative;
    }
    .price {
      text {
        font-weight: bold;
      }
    }
  }
  > text {
    height: 90rpx;
    line-height: 90rpx;
    color: #999999;
    padding-left: 30rpx;
  }
}
.price-type {
  background: #fff;
  width: 690rpx;
  border-radius: 10rpx;
  margin: 0 auto;
  color: #333;
  padding: 20rpx;
  box-sizing: border-box;
  .price-all {
    text-align: center;
    font-size: 32rpx;
    color: #333;
    padding: 20rpx 0;
      font-weight: bold;
    text {
      color:#f2292d;
    }
  }
  .type {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80rpx;
    .left {
      font-size: 28rpx;
      switch {
        transform: scale(0.7);
      }
      text {
        color: #666;
      }
    }
    .price {
      display: flex;
      align-items: center;
      > view {
        color:#f92832;
        margin-left: 10rpx;
        font-weight: bold;
      }
      text {
        color: #666;
      }
    }
  }
  .input-wrap {
    display: flex;
    align-items: center;
    height: 80rpx;
    > input {
      margin-left: 20rpx;
      border-bottom: 1px solid #ccc;
      width: 400rpx;
      height: 70rpx;
    }
    text {
        color: #666;
    }
  }
}
.price-type {
  position: fixed;
  bottom: 0;
  z-index: 999;
  background: #fff;
  width: 750rpx;
  border-radius: 10rpx;
  margin: 0 auto;
  color: #333;
  padding:50rpx 30rpx;
  box-sizing: border-box;
  .type {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80rpx;
    .left {
      font-size: 28rpx;
      switch {
        transform: scale(0.7);
      }
      text {
        color: #666;
      }
    }
    .price {
      display: flex;
      align-items: center;
      > view {
        color:#f92832;
        margin-left: 10rpx;
        font-weight: bold;
      }
      text {
        color: #666;
      }
    }
  }
  .input-wrap {
    display: flex;
    align-items: center;
    height: 80rpx;
    > input {
      margin-left: 20rpx;
      border-bottom: 1px solid #ccc;
      width: 400rpx;
      height: 70rpx;
    }
    text {
        color: #666;
    }
  }
  .price-type-title {
    text-align: center;
    font-size: 26rpx;
    color: #ccc;
    padding: 30rpx 0 0 0;
  }
  .btn {
    width: 670rpx;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    font-weight: bold;
    font-size: 28rpx;
    color: #fff;
    background: #f2292d;
    border-radius: 10rpx;
    margin: 30rpx auto 0;
  }
}

</style>

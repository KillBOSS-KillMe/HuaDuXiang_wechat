<template>
  <view class="contract">
    <view class="coupon-nav">
      <repeat for="{{navArr}}" item="item">
        <view
          class="coupon-nav-item {{index == navIdx ? 'nav-active' : '' }}"
          bindtap="changeNav({{index}})"
        >{{item.title}}</view>
      </repeat>
    </view>
    <view class="goods-wrap">
      <repeat for="{{orderList}}" item="item">
        <view class="goods-item">
          <view class="goods-head">
            <view class="contract-title">
              <text>订单编号：{{item.pay_sn}}</text>
              <text class="state" wx:if="{{item.order_state == 0}}">已取消</text>
              <text class="state" wx:elif="{{item.order_state == 10}}">待支付</text>
              <text class="state" wx:elif="{{item.order_state == 20}}">待发货</text>
              <text class="state" wx:elif="{{item.order_state == 30}}">待收货</text>
              <text class="state" wx:elif="{{item.order_state == 40}}">交易完成</text>
            </view>
          </view>
          <view class="goods-cont">
            <repeat for="{{item.extend_order_goods}}" index="idx" item="ele">
              <navigator
                class="goods-list"
                hover-class="none"
                url="/pages/orderInfo?order_id={{item.order_id}}"
              >
                <view class="goods-info">
                  <image src="{{ele.goods_image_url}}" />
                  <view class="info-r">
                    <view class="name">
                      <view>{{ele.goods_name}}</view>
                      <text>×{{ele.goods_num}}</text>
                    </view>
                    <view class="spec">
                      <view>规格</view>
                    </view>
                    <view class="price">
                      <text></text>
                      <text>￥</text>
                      <text>{{ele.goods_price}}</text>
                    </view>
                  </view>
                </view>
              </navigator>
            </repeat>
            <view class="goods-fot">
              <view class="should-price">
                应付金额
                <view class="text">￥{{item.order_amount}}</view>
              </view>
               <!-- 0 已取消 -->
              <view class="goods-option" wx:if="{{item.order_state == 0}}">
                 <view
                  class="goods-btn"
                  @tap="orderDelete({{item.order_id}}, {{index}})"
                >删除订单</view>
              </view>
              <!-- 1 待付款 -->
              <view class="goods-option" wx:if="{{item.order_state == 10}}">
                <view class="goods-btn" @tap="orderCancel({{item.order_id}}, {{index}})">
                  取消订单
                </view>
                <view class="goods-btn color-y" data-order_id="{{item.order_id}}" @tap="pay({{item.order_id}}, {{index}})">立即付款</view>
              </view>
              <!-- 2 待发货   -->
              <view class="goods-option" wx:elif="{{item.order_state == 20}}">
                <view class="goods-btn color-y">
                  <navigator
                    url="/pages/order-track/order-track?order_id={{item.order_id}}"
                    hover-class="none"
                  >申请退款</navigator>
                </view>
              </view>
              <!-- 3 已发货/待收货 -->
              <view class="goods-option" wx:elif="{{item.order_state == 30}}">
                <view class="goods-btn">
                  <navigator
                    url="/pages/logistics?order_id={{item.order_id}}"
                    hover-class="none"
                  >
                  查看物流
                  </navigator>
                </view>
                <view class="goods-btn" @tap="orderReceive({{item.order_id}},{{index}})">确认收货</view>
              </view>
              <!-- 4 已完成 -->
              <view class="goods-option" wx:elif="{{item.order_state == 40}}">
                <view
                  class="goods-btn"
                  @tap="orderDelete({{item.order_id}}, {{index}})"
                >删除订单</view>
              </view>
            </view>
          </view>
        </view>
      </repeat>
    </view>

     <view class="none-content" wx:if="{{page_total == 0}}">
      <image src="/assets/img/image48.png"/>
      <navigator url="/pages/index" hover-class="none" open-type="reLaunch" class="go">去选购</navigator>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
var api = require('../api.js');
import { ajax } from '../ajax.js';


export default class ShopCart extends wepy.page {
  config = {
    navigationBarTitleText: '订单列表'
  };

  components = {};

  mixins = [];

  data = {
    navArr: [
      { title: '全部', id: 0 },
      { title: '待付款' },
      { title: '待发货' },
      { title: '待收货' },
      { title: '已完成' }
    ],
    navIdx: 0,
    orderList: [],
    state_arr:['','state_new','state_pay','state_send','state_noeval'] ,
    curpage: 1,
    hasmore: false,
    page_total: '',
  };

  computed = {};

  methods = {
    orderCancel(order_id, index){
      var that = this
      wx.showModal({
        title: '确认取消订单?',
        success(res) {
          if(res.confirm) {
            ajax({
              url: api.orderCancel,
              data: {
                order_id
              }
            }).then(e => {
              if(e.datas.state == 1) {
                wx.showToast({
                  title: e.datas.msg
                })
                that.orderList[index].order_state = e.datas.order_state
                that.$apply()
              } else {
                wx.showToast({
                  title: e.datas.error,
                  icon: 'none'
                })
              }
            })
          }
        }
      })
    },
    orderDelete(order_id, index){
      var that = this
      wx.showModal({
        title: '确认删除订单?',
        success(res) {
          if(res.confirm) {
            ajax({
              url: api.orderDelete,
              data: {
                order_id
              }
            }).then(e => {
              if(e.datas.state == 1) {
                wx.showToast({
                  title: e.datas.msg
                })
                that.orderList.splice(index,1)
                that.$apply()
              } else {
                wx.showToast({
                  title: e.datas.error,
                  icon: 'none'
                })
              }
            })
          }
        }
      })
    },
    orderReceive(order_id, index){
      var that = this
      wx.showModal({
        title: '确认收货?',
        success(res) {
          if(res.confirm) {
            ajax({
              url: api.orderReceive,
              data: {
                order_id
              }
            }).then(e => {
              if(e.datas.state == 1) {
                wx.showToast({
                  title: e.datas.msg
                })
                that.orderList[index].order_state = e.datas.order_state
                that.$apply()
              } else {
                wx.showToast({
                  title: e.datas.error,
                  icon: 'none'
                })
              }
            })
          }
        }
      })
    },
    async pay(order_id, index) {
      var resData = await ajax({
        url: api.pay,
        data: {
          pay_sn: '900626631146390007',
          payment_code: 'mini_wxpay'
        }
      })

      if(resData.datas.state == 1) {
        var api_pay = resData.datas.api_pay
        wx.requestPayment({
          ...api_pay,
          success(res) {
            console.log(res)
          },
          complete(d) {console.log(d)}
        })
      }
    },
    changeNav(idx) {
      if(idx == this.navIdx) return
      this.navIdx = idx
      this.hasmore = false
      this.curpage = 1
      this.orderList = []
      this.requestList()
    }
  };
  onLoad(t) {
    this.navIdx = t.idx || 0
    this.requestList()
  }
  onShow() {
  }
  requestList(){
    ajax({
      url: api.orderList,
      data: {
        page: 10, // 
        curpage: this.curpage,  // 当前页码
        state_type: this.state_arr[this.navIdx]
      }
    }).then(res => {
      var order_group_list = res.datas.order_group_list || []
      var order_list = []
      order_group_list.forEach(item => {
        order_list = order_list.concat(item.order_list)
      })
      this.orderList = this.orderList.concat(order_list)

      this.page_total = res.page_total
      this.hasmore = res.hasmore
      this.$apply()
    })
  }
  onReachBottom () {
    if(this.hasmore) {
      this.curpage ++ 
      this.requestList()
    }
  }

  events = {};
}
</script>
<style lang="less">
.contract {
  background: #f9f9f9;
  margin-top: 88rpx;
}
.coupon-nav {
  display: flex;
  height: 88rpx;
  position: fixed;
  width: 100%;
  background: #fff;
  top: 0;
  z-index: 999;
}
.coupon-nav-item {
  flex: 1;
  text-align: center;
  font-size: 28rpx;
  color: #8e8e8e;
  position: relative;
  line-height: 88rpx;
}
.nav-active {
  color: #282828;
  font-weight: bold;
}
.nav-active::after {
  content: '';
  width: 50rpx;
  height: 6rpx;
  background: #FF2228;
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}

.goods-item {
  background: #fff;
  margin-bottom: 10rpx;
}
.goods-head {
  padding: 30rpx 30rpx 0rpx;
  box-sizing: border-box;
}
.contract-title {
  display: flex;
  justify-content: space-between;
  font-size: 24rpx;
  color: #282828;
  align-items: center;
}
.contract-title .state {
  font-size: 28rpx;
  color: #FF2228;
}
.contract-time {
  font-size: 28rpx;
  color: #000;
  font-weight: bold;
}

.goods-cont {
  padding: 0rpx 30rpx 0;
}

.goods-cont > text {
  font-size: 28rpx;
  color: #000;
  font-weight: bold;
}

.goods-info {
  display: flex;
  padding: 25rpx 0;
  border-bottom: 1px solid #f2f2f2;
}
.goods-info image {
  width: 188rpx;
  height: 188rpx;
  border-radius: 10rpx;
  margin-right: 26rpx;
}
.info-r {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.info-r .name {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.info-r .name > view {
  font-size: 28rpx;
  font-weight: bold;
  color: #282828;
  width: 400rpx;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.info-r .name > text {
  color: #8e8e8e;
}
.info-r .spec {
  flex: 1;
  padding-top: 16rpx;
}
.info-r .spec > view {
  background: #fbfbfb;
  border: 1px solid #f5f5f5;
  border-radius: 6rpx;
  padding: 8rpx 18rpx;
  display: inline-block;
  color: #9e9e9e;
  font-size: 26rpx;
}
.info-r .price {
  display: flex;
  align-items: center;
}
.info-r .price > text:nth-of-type(1) {
  font-size: 28rpx;
  color: #282828;
}
.info-r .price > text:nth-of-type(2) {
  font-size: 28rpx;
  color: #f2292d;
}
.info-r .price > text:nth-of-type(3) {
  font-size: 38rpx;
  color: #f2292d;
  font-weight: bold;
}

.goods-fot {
  height: 106rpx;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.goods-option > view {
  width: 132rpx;
  height: 60rpx;
  text-align: center;
  line-height: 60rpx;
  font-size: 28rpx;
  border: 1px solid #8e8e8e;
  color: #8e8e8e;
  border-radius: 10rpx;
  margin-left: 16rpx;
}
.goods-option > view:nth-of-type(1) {
  margin-left: 0;
}
.goods-option .color-y {
  color: #FF2228;
  border-color: #FF2228;
}

.goods-option {
  height: 106rpx;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex: 1;
}
.should-price {
  font-size: 28rpx;
  color: #8e8e8e;
  display: flex;
  align-items: center;
}
.should-price .text {
  color: #f2292d;
  padding-left: 10rpx;
}
.none-content {
  text-align: center;
  image {
    width: 500rpx;
    height: 500rpx;
  }
  .go{
    height: 80rpx;
    border-radius: 50rpx;
    width: 300rpx;
    line-height: 80rpx;
    border: 1px solid #FF2228;
    font-size: 30rpx;
    color: #FF2228;
    margin: 0 auto;
  }
}
</style>

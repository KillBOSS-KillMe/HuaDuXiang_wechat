
<template>
  <view>
    <view class="goods-wrap">
      <scroll-view class="left-scroll" scroll-y>
        <view>
          <repeat for="{{oneList}}" item="item">
            <view
              class="text {{leftNav == index ? 'active-text':''}}"
              @tap="changeLeftNav({{index}})"
            >{{item.gc_name}}</view>
          </repeat>
        </view>
      </scroll-view>
      <view class="goods-right">
        <scroll-view class="right-scroll" scroll-y>
          <view class="advertisement" hover-class="none">
            <image wx:if="{{oneList[leftNav].imagesrc}}"  src="{{oneList[leftNav].imagesrc}}" />
          </view>
          <repeat for="{{twoList}}" item="item">
            <view class="two-type">
              <view class="title">{{item.gc_name}}</view>
              <view class="two-type-list">
                <repeat for="{{item.three}}" item="ele">
                  <view class="item" @tap="navGoodsList({{ele.gc_id}})">
                    <image src="{{ele.imagesrc}}" wx:if="{{ele.imagesrc}}" />
                    <text>{{ele.new_name}}</text>
                  </view>
                </repeat>
              </view>
            </view>
          </repeat>
        </scroll-view>
      </view>
    </view>

    <nav class="nav" @childFn.user="goPage"></nav>
  </view>
</template>

<script>
import wepy from 'wepy';
import nav from '../components/nav'; // 底部导航
var api = require('../api.js');
import { ajax } from '../ajax.js';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '分类'
  };
  components = {
    nav: nav
  };

  mixins = [];

  data = {
    leftNav: 0,
    oneList: [],
    twoList: []
  };

  computed = {};

  methods = {
    // 切换一级分类
    changeLeftNav(idx) {
      if(idx == this.leftNav) return
      this.leftNav = idx
      this.setList()
    },
    navGoodsList(gc_id) {
      this.$navigate({url: `goodsList?gc_id=${gc_id}`})
    }
  };

  events = {};

  onLoad() {}
  onShow() {
    // 一级分类
    ajax({
      url: api.oneGoodsClass,
    }).then(res => {
      this.oneList = res.datas || []
      this.setList()
      this.$apply()
    })
  }
  // 处理二三级分类数据
  setList(idx){
    this.twoList = this.oneList[this.leftNav].two
    this.twoList.forEach(item => {
      if( Object.prototype.toString.call(item.three) == '[object Array]') {
        item.three.forEach(ele => {
          ele.new_name = ele.gc_name.toString().slice(0, 4)
        })
      }
    })
  }
}
</script>


<style lang="less">
.goods-wrap {
  display: flex;
  .left-scroll {
    height: calc(100vh - 100rpx);
    width: 200rpx;
    background: #f9f9f9;
    .text {
      text-align: center;
      height: 87rpx;
      line-height: 87rpx;
      font-size: 28rpx;
      color: #282828;
    }
    .active-text {
      background: #fff;
      border-left: 4rpx solid #f2292d;
      width: 200rpx;
    }
  }
  .goods-right {
    .right-scroll {
      height: calc(100vh - 100rpx);
      padding: 0 30rpx 0 20rpx;
      .advertisement {
        padding-top: 30rpx;
        > image {
          width: 500rpx;
          height: 170rpx;
          border-radius: 10rpx;
        }
      }
      .two-type {
        .title {
          font-weight: bold;
          font-size: 26rpx;
          height: 80rpx;
          line-height: 80rpx;
        }
        .two-type-list {
          display: flex;
          flex-wrap: wrap;
          .item {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            width: 160rpx;
            margin-bottom: 30rpx;
            min-height: 70rpx;
            > image {
              width: 80rpx;
              height: 80rpx;
              border-radius: 10rpx;
              display: block;
            }
            text {
              font-size: 26rpx;
              padding-top: 10rpx;
            }
          }
        }
      }
    }
  }
}
</style>

<template>
  <view class="wrap">
    <step :state.sync="state"></step>
    <!-- state 0 -10没入驻 10填完信息待审核 11交完钱审核中 20填完信息审核成功 30填完信息审核失败 31交钱审核失败 40入驻成功 -->
    <form @submit="submit" wx:if="{{isJoin == 0}}">
      <view class="agreement-wrap">
        <view class="agreement-title">店铺信息注册</view>
        <view>
          <view class="com-item">
            <view class="title">店铺行业</view>
            <picker bindchange="storeClassChange" range="{{storeClass}}" range-key="sc_name">
              <input placeholder="请选择店铺行业" value="{{storeClass[storeClassIndex].sc_name}}" disabled>
            </picker>
          </view>
          <view class="com-item">
            <view class="title">店铺类目</view>
            <picker
              mode="multiSelector"
              bindchange="bindMultiPickerChange"
              bindcolumnchange="bindMultiPickerColumnChange"
              range="{{entryArr}}"
              value="{{entryIndex}}"
              range-key="gc_name"
            >
              <input type="text" placeholder="请选择店铺条目" value="{{entryName}}" disabled>
            </picker>
          </view>
          <view class="com-item">
            <view class="title">开店时长</view>
            <picker bindchange="timeChange" range="{{timeArr}}" range-key="num">
              <input placeholder="请选择开店时间" value="{{timeArr[timeIndex].num}}" disabled>
            </picker>
          </view>
          <view class="com-item">
            <view class="title">店铺等级</view>
            <picker bindchange="storeGradeChange" range="{{storeGrade}}" range-key="sg_name">
              <input
                type="text"
                placeholder="请选择店铺等级"
                value="{{storeGrade[storeGradeIndex].sg_name}}"
                disabled
              >
            </picker>
          </view>
        </view>
        <view class="upload-title">合计费用</view>
        <view class="settled-price">平台使用费
          <text>{{useCostPrice}}元</text>
        </view>
        <view class="settled-price">店铺保证金
          <text>{{bondPrice}}元</text>
        </view>
      </view>
      <view class="nav-wrap">
        <navigator open-type="redirect" url="/pages/settledinthree" class="item">上一步</navigator>
        <button form-type="submit" class="item nav">提交审核</button>
      </view>
    </form>
    <view class="examine"  wx:if="{{isJoin == 10}}">
      <view class="title">信息提交审核:</view>
      <image class="examine-img" src="/assets/img/image43.png" />
      <!-- <view class="again-info" @tap="againInfo">重新填写信息</view> -->
    </view>
    <view class="error-wrap" wx:if="{{isJoin == 30}}">
        <view class="error-box">
          <view class="error-title">审核失败</view>
          <navigator hover-class="none" open-type="redirect" url="/pages/settledinone" >去重新申请</navigator>
        </view>
    </view>
    <view wx:if="{{isJoin == 20}}">
      <view class="agreement-wrap">
        <view class="agreement-title">审核通过确认信息</view>
        <view class="settle-list">
          <view class="com-item">
            <view class="title">商铺账号</view>
            <input type="text" value="{{join_info.seller_name}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">商铺名称</view>
            <input type="text" value="{{join_info.store_name}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">联系人</view>
            <input type="text" value="{{join_info.contacts_name}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">联系电话</view>
            <input type="text" value="{{join_info.contacts_phone}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">商铺地址</view>
            <input type="text" value="{{join_info.company_address_detail}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">商铺行业</view>
            <input type="text" value="{{join_info.sc_name}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">商铺类目</view>
            <input type="text" value="{{join_info.store_class_names}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">开店时长</view>
            <input type="text" value="{{join_info.joinin_year}}年" disabled>
          </view>
          <view class="com-item">
            <view class="title">店铺等级</view>
            <input type="text" value="{{join_info.sg_name}}" disabled>
          </view>
          <view class="com-item">
            <view class="title">合计费用</view>
            <view class="price">
              <text>{{join_info.paying_amount}}</text>元
            </view>
          </view>
        </view>
      </view>
      <view class="nav-wrap">
        <navigator class="item"  open-type="redirect"  url="/pages/settledinone">重新申请</navigator>
        <button form-type="submit" class="item nav" bindtap="showPriceType">去支付</button>
      </view>
    </view>
    <paymask :maskFlag.sync="payFlag">
      <view class="price-type">
        <view class="price-all">支付金额：
          <text>￥{{join_info.paying_amount}}</text>
        </view>
        <view class="type">
          <view class="left">
            <text>使用余额支付</text>
            <!-- <switch color="#48CFAE" checked="{{payment_type == 1}}" disabled></switch> -->
          </view>
          <view class="price">
            <text>可用余额</text>
            <view>￥{{member_data.available_predeposit || 0}}</view>
          </view>
        </view>
        <view class="input-wrap" wx:if="{{payment_type == 1}}">
          <text>输入支付密码</text>
          <input type="password" @input="inputPassword" value="{{password}}" maxlength="6">
        </view>
        <view class="price-type-title">支付方式：{{payment_type == 0 ? '微信支付':'余额支付'}}</view>
        <button class="btn" @tap="pay">确认支付</button>
      </view>
    </paymask>
  </view>
</template>

<script>
import wepy from 'wepy';
import step from '../components/step';
var api = require('../api.js');
import { ajax } from '../ajax.js';
import mask from '../components/mask';
var _ = require('../utils/underscore.js');

export default class Settledinfour extends wepy.page {
  config = {
    navigationBarTitleText: '入驻审核'
  };

  components = { step, paymask: mask };

  mixins = [];

  data = {
    state: 4,
    isJoin: '',
    payFlag: false,
    storeGradeIndex: 0,
    storeGrade: [],
    timeArr: [{ num: 1 }, { num: 2 }, { num: 3 }],
    timeIndex: 0,
    storeClass: [], // 店铺分类
    storeClassIndex: 0, //店铺分类索引
    entryArr: [], // 带三级分类的条目
    entryName: '', // 店铺三级分类名称
    entryId: null, // 店铺三级分类id
    useCostPrice: 0, // 平台使用费用
    bondPrice: 0, // 商家保证金
    member_data: {}, //用户余额信息
    paying_amount: 0, //支付总金额
    join_info: {}, //审核成功信息显示
    password: '',
    payment_type: 1 , //付款类型 0微信 1余额

  };

  computed = {
    useCostPrice() {
      var num = this.timeArr[this.timeIndex].num;
      var price =
        this.storeGrade[this.storeGradeIndex] &&
        this.storeGrade[this.storeGradeIndex].sg_price;
      return (Number(num) * Number(price)).toFixed(2);
    },
    bondPrice() {
      var price =
        this.storeClass[this.storeClassIndex] &&
        this.storeClass[this.storeClassIndex].sc_bail;
      return Number(price).toFixed(2);
    }
  };
  onShow() {}
  methods = {
    showPriceType() {
      this.payFlag = true;
    },
    pay() {
      this.$redirect('settledinfive');
    },
    storeGradeChange(e) {
      var value = e.detail.value;
      this.storeGradeIndex = value;
    },
    timeChange(e) {
      this.timeIndex = e.detail.value;
    },
    storeClassChange(e) {
      this.storeClassIndex = e.detail.value;
    },
    bindMultiPickerChange(e) {
      var idxArr = e.detail.value;
      this.entryIndex = idxArr;
      var entryArr = this.entryArr;
      this.entryName = `${entryArr[0][idxArr[0]].gc_name},${
        entryArr[1][idxArr[1]].gc_name
      },${entryArr[2][idxArr[2]].gc_name}`;
      this.entryId = `${entryArr[0][idxArr[0]].gc_id},${
        entryArr[1][idxArr[1]].gc_id
      },${entryArr[2][idxArr[2]].gc_id}`;
    },
    bindMultiPickerColumnChange(e) {
      this.setList(e.detail.column, e.detail.value);
    },
    submit(e) {
      this.debounce(e);
    },
    inputPassword(e) {
      this.password = e.detail.value
    },
    // 入驻付钱
    pay() {
      var that = this
      if(!this.password) {
        wx.showToast({
          title: '请输入密码',
          icon: 'none'
        })
        return false
      }
      ajax({
        url: api.joinPay,
        data: {
          password: this.password
        }
      }).then(res => {
        if(res.code == 200) {
          if(res.datas.state == 1) {
            wx.showToast({
              title: res.datas.msg,
            })
            var timer = setTimeout(() => {
              that.$redirect(`settledinfive`);
              clearTimeout(timer)
            }, 1000)
          } else if (res.datas.state == -4) {
            wx.showModal({
              title: "提醒",
              content: "余额不足，是否前往充值？",
              success(res) {
                if(res.confirm) {
                  that.$redirect(`vip`);
                }
              }
            })
          } else {
            wx.showToast({
              title: res.datas.msg,
              icon: 'none',
            })
          }
        }
      })
    },    
  };

  setList(idx, val) {
    var allArr = this.entryArr[0];
    if (idx == 0) {
      this.entryArr[1] = allArr[val].two;
      this.entryArr[2] = allArr[val].two[0].three;
    } else if (idx == 1) {
      this.entryArr[2] = this.entryArr[1][val].three;
    } else if (idx == 3) {
      return false;
    }
  }

  events = {};

  async onLoad(options) {
    // 防止重复提交第三方插件函数
    this.debounce = _.debounce(this.submit, 1000, { immediate: true });
    var isJoinData = await ajax({
      url: api.isJoin,
      icon: 'none'
    })
    this.isJoin = isJoinData.datas.state
    this.$apply()
    if(this.isJoin == 20) {
      ajax({
        url: api.getJoinInfo,
      }).then(res => {
        if(res.code == 200 && res.datas.state == 1) {
          this.join_info = res.datas.join_info
          this.$apply()
        }
      })
      // 用户个人中心数据接口
      ajax({
        url: api.memberInfo,
        icon: 'none'
      }).then(res => {
        if(res.code == 200) {
          this.member_data = res.datas.member_data
          this.$apply()
        }
      })
      return false
    }
    // 店铺等级
    ajax({
      url: api.getStoreGrade,
      icon: 'none'
    }).then(res => {
      this.storeGrade = res.datas.data;
      this.$apply();
    });
    // 店铺行业(一)
    ajax({
      url: api.getStoreClass,
      icon: 'none'
    }).then(res => {
      this.storeClass = res.datas.data || [];
      this.$apply();
    });
    // 店铺类目3级分类(二)
    ajax({
      url: api.oneGoodsClass,
      icon: 'none'
    }).then(res => {
      var oneList = res.datas;
      var twoList = oneList[0].two;
      var threeList = twoList[0].three;
      var arr = [];
      arr.push(oneList);
      arr.push(twoList);
      arr.push(threeList);
      this.entryArr = arr;
      this.entryName = `${oneList[0].gc_name},${twoList[0].gc_name},${
        threeList[0].gc_name
      }`;
      this.entryId = `${oneList[0].gc_id},${twoList[0].gc_id},${
        threeList[0].gc_id
      }`;
      this.$apply();
    });
  }
  submit(e) {
    if (!this.entryName) {
      wx.showToast({
        title: '请选择店铺条目',
        icon: 'none'
      });
      return false;
    }
    ajax({
      url: api.joinStep3,
      data: {
        sc_id: this.storeClass[this.storeClassIndex].sc_id, //'店铺分类编号',
        sc_name: this.storeClass[this.storeClassIndex].sc_name, //'店铺分类名称',
        sc_bail: this.storeClass[this.storeClassIndex].sc_bail, //'店铺分类保证金',
        sg_id: this.storeGrade[this.storeGradeIndex].sg_id, //'店铺等级编号',
        sg_name: this.storeGrade[this.storeGradeIndex].sg_name, //'店铺等级名称',
        sg_info: this.storeGrade[this.storeGradeIndex].sg_price, //'店铺等级价格',
        store_class_ids: this.entryId,
        store_class_names: this.entryName,
        joinin_year: this.timeArr[this.timeIndex].num //'入驻时长',
      }
    }).then(res => {
      if (res.code == 200) {
        wx.showToast({
          title: res.datas.msg,
          icon: 'none'
        });
        if (res.datas.state == 1) {
          var timer = setTimeout(() => {
            this.$redirect('settledinfour');
            clearTimeout(timer);
          }, 1000);
        }
      }
    });
  }
}
</script>

<style lang="less">
.agreement-wrap {
  padding: 0 30rpx;
  .agreement-title {
    font-weight: bold;
    font-size: 30rpx;
    color: #333;
    text-align: center;
    padding: 30rpx 0 26rpx;
  }
}
.nav-wrap {
  display: flex;
  padding: 60rpx 140rpx 60rpx 140rpx;
  justify-content: space-between;
  .item {
    width: 170rpx;
    height: 70rpx;
    line-height: 70rpx;
    border-radius: 10rpx;
    font-size: 28rpx;
    color: #333;
    text-align: center;
    border: 1px solid #bcbcbc;
  }
  .nav {
    color: #fff;
    background: #ff2228;
    border: none;
  }
}
.com-item {
  margin-top: 60rpx;
  display: flex;
  align-items: center;
  justify-content: space-between;
  &:nth-of-type(1) {
    margin-top: 0rpx;
  }
  .title {
    font-weight: bold;
    font-size: 30rpx;
    width: 150rpx;
    white-space: nowrap;
  }
  input {
    height: 100rpx;
    flex: 1;
    color: #333;
    font-size: 28rpx;
    border: 1px solid #bcbcbc;
    border-radius: 10rpx;
    padding-left: 10rpx;
    box-sizing: border-box;
    height: 70rpx;
  }
  > text {
    font-weight: bold;
    font-size: 30rpx;
  }
  picker {
    flex: 1;
  }
  .price {
    font-size: 30rpx;
    font-weight: bold;
    flex: 1;
    text {
      color: #ff2228;
    }
  }
}
.upload-title {
  color: #333333;
  font-weight: bold;
  font-size: 30rpx;
  padding: 50rpx 0 40rpx 0;
}
.settled-price {
  color: #666666;
  font-size: 28rpx;
  padding-bottom: 30rpx;
  text {
    font-weight: bold;
    color: #333;
    margin-left: 20rpx;
  }
}
.settle-list {
  input {
    border: none;
    color: #333333;
    font-size: 28rpx;
    font-weight: 400;
    height: auto;
  }
  .com-item {
    margin-top: 30rpx;
    &:nth-of-type(1) {
      margin-top: 0;
    }
  }
}
.price-type {
  position: fixed;
  bottom: 0;
  z-index: 999;
  background: #fff;
  width: 750rpx;
  border-radius: 10rpx;
  margin: 0 auto;
  color: #333;
  padding: 50rpx 30rpx;
  box-sizing: border-box;
  .type {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80rpx;
    .left {
      font-size: 28rpx;
      switch {
        transform: scale(0.7);
      }
      text {
        color: #666;
      }
    }
    .price {
      display: flex;
      align-items: center;
      > view {
        color: #f92832;
        margin-left: 10rpx;
        font-weight: bold;
      }
      text {
        color: #666;
      }
    }
  }
  .input-wrap {
    display: flex;
    align-items: center;
    height: 80rpx;
    > input {
      margin-left: 20rpx;
      border-bottom: 1px solid #ccc;
      width: 400rpx;
      height: 70rpx;
    }
    text {
      color: #666;
    }
  }
  .price-type-title {
    text-align: center;
    font-size: 26rpx;
    color: #ccc;
    padding: 30rpx 0 0 0;
  }
  .btn {
    width: 670rpx;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    font-weight: bold;
    font-size: 28rpx;
    color: #fff;
    background: #f2292d;
    border-radius: 10rpx;
    margin: 30rpx auto 0;
  }
}
.examine {
  position: relative;
  .title {
    font-weight: bold;
    font-size: 32rpx;
    color:#000;
    padding: 30rpx;
  }
  .examine-img {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 330rpx;
    height: 256rpx;
    top: 200rpx;
  }
  .success-img {
    height: 170rpx;
    width: 426rpx;
  }
  .again-info {
    position: absolute;
    text-align: center;
    font-weight: bold;
    font-size: 30rpx;
    width: 690rpx;
    height: 88rpx;
    line-height: 88rpx;
    color: #fff;
    background: #ff2228;
    bottom: 80rpx;
    border-radius: 10rpx;
    left: 50%;
    transform: translateX(-50%);
  }
}
.error-wrap {
  width: 100%;
  height: 100vh;
  position: fixed;
  background: #00000099;
  left: 0;
  top: 0;
  z-index: 999;
  .error-box {
    position: absolute;
    background: #fff;
    height: 252rpx;
    width: 544rpx;
    border-radius: 10rpx;
    left: 50%;
    transform: translateX(-50%);
    top: 30%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .error-title {
      font-weight: bold;
      font-size: 32rpx;
      color: #333;
      padding-top: 30rpx;
    }
    navigator {
      font-weight: bold;
      font-size: 32rpx;
      color: #FF2228;
      padding: 20rpx 0;
    }
  }
}
</style>
